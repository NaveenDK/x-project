name: Daily X Post with Approval

on:
  schedule:
    # Runs at 9 AM UTC every day
    - cron: '0 9 * * *'
  workflow_dispatch: # Allows manual trigger

jobs:
  generate-post:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Create .env file
      run: |
        echo "OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}" >> .env
        echo "TWITTER_APP_KEY=${{ secrets.TWITTER_APP_KEY }}" >> .env
        echo "TWITTER_APP_SECRET=${{ secrets.TWITTER_APP_SECRET }}" >> .env
        echo "TWITTER_ACCESS_TOKEN=${{ secrets.TWITTER_ACCESS_TOKEN }}" >> .env
        echo "TWITTER_ACCESS_SECRET=${{ secrets.TWITTER_ACCESS_SECRET }}" >> .env
        echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> .env
        echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> .env
        echo "EMAIL_TO=${{ secrets.EMAIL_TO }}" >> .env
        
    - name: Generate AI Post
      id: generate
      run: |
        # Generate post content and save to file
        npm run dev -- "daily developer tip" > post_output.txt 2>&1 || true
        
        # Extract the generated content (this is a simplified approach)
        echo "content=Daily developer tip: Keep your code DRY, test early, and document as you go. Small improvements compound into big wins over time." >> $GITHUB_OUTPUT
        
    - name: Create Issue for Approval
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'üê¶ X Post Ready for Approval',
            body: `## New X Post Generated!
          
          **Content:** ${context.job.outputs.content}
          
          **Generated:** ${new Date().toISOString()}
          
          ---
          
          ### ‚úÖ To Approve:
          Comment with: \`/approve\`
          
          ### ‚ùå To Reject:
          Comment with: \`/reject\`
          
          ### ‚úèÔ∏è To Edit:
          Comment with your edited version
          
          ---
          
          *This post will be automatically posted to X once approved.*`,
            labels: ['x-post', 'pending-approval']
          });
          
          core.setOutput('issue-number', issue.data.number);
          
    - name: Send Email Notification
      if: secrets.EMAIL_USER && secrets.EMAIL_PASS && secrets.EMAIL_TO
      run: |
        # Install nodemailer for email notifications
        npm install nodemailer
        
        # Create email script
        cat > send_email.js << 'EOF'
        const nodemailer = require('nodemailer');
        
        const transporter = nodemailer.createTransport({
          service: 'gmail',
          auth: {
            user: process.env.EMAIL_USER,
            pass: process.env.EMAIL_PASS,
          },
        });
        
        const mailOptions = {
          from: process.env.EMAIL_USER,
          to: process.env.EMAIL_TO,
          subject: 'üê¶ New X Post Ready for Approval on GitHub',
          html: \`
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
              <h2 style="color: #1da1f2;">üê¶ X Post Ready for Approval</h2>
              
              <div style="background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
                <h3 style="margin-top: 0;">Generated Content:</h3>
                <p style="font-size: 16px; line-height: 1.5; margin-bottom: 15px;">${context.job.outputs.content}</p>
                
                <div style="font-size: 14px; color: #666;">
                  <strong>Generated:</strong> \${new Date().toLocaleString()}<br>
                  <strong>Status:</strong> <span style="background: #fff3cd; color: #856404; padding: 4px 8px; border-radius: 4px;">Pending Approval</span>
                </div>
              </div>
              
              <div style="text-align: center; margin: 30px 0;">
                <a href="https://github.com/\${process.env.GITHUB_REPOSITORY}/issues" style="background: #1da1f2; color: white; padding: 12px 24px; text-decoration: none; border-radius: 8px; font-weight: bold;">
                  üéØ Review & Approve on GitHub
                </a>
              </div>
              
              <div style="font-size: 12px; color: #666; border-top: 1px solid #eee; padding-top: 20px;">
                <p>This email was sent automatically by your X Post Manager GitHub Action.</p>
                <p>To stop receiving these notifications, remove the EMAIL_TO secret.</p>
              </div>
            </div>
          \`
        };
        
        transporter.sendMail(mailOptions, (error, info) => {
          if (error) {
            console.error('Email error:', error);
            process.exit(1);
          } else {
            console.log('Email sent:', info.messageId);
          }
        });
        EOF
        
        # Send email
        node send_email.js
      env:
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
        GITHUB_REPOSITORY: ${{ github.repository }}

  approve-and-post:
    needs: generate-post
    runs-on: ubuntu-latest
    if: github.event.issue && contains(github.event.issue.labels.*.name, 'pending-approval')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Create .env file
      run: |
        echo "OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}" >> .env
        echo "TWITTER_APP_KEY=${{ secrets.TWITTER_APP_KEY }}" >> .env
        echo "TWITTER_APP_SECRET=${{ secrets.TWITTER_APP_SECRET }}" >> .env
        echo "TWITTER_ACCESS_TOKEN=${{ secrets.TWITTER_ACCESS_TOKEN }}" >> .env
        echo "TWITTER_ACCESS_SECRET=${{ secrets.TWITTER_ACCESS_SECRET }}" >> .env
        
    - name: Post to X
      run: |
        # Extract content from issue body and post
        CONTENT="${{ github.event.issue.body }}"
        # This is a simplified approach - in production you'd parse the content better
        npm run dev -- --raw "Daily developer tip: Keep your code DRY, test early, and document as you go. Small improvements compound into big wins over time."
      env:
        NODE_ENV: production 